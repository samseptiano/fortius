plugins {
    id 'com.android.application'
    id 'kotlin-android'
//    id 'kotlin-android-extensions'
    id 'androidx.navigation.safeargs.kotlin'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'

}

def buildString = { k -> "\"${k}\"" }

def buildProps = new Properties()
buildProps.load(project.rootProject.file('build.properties').newDataInputStream())

android {
    compileSdkVersion 33
    buildToolsVersion "30.0.3"

    buildFeatures {
        viewBinding true
    }

    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }
    compileOptions {
        // Flag to enable support for the new language APIs
        coreLibraryDesugaringEnabled true

        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }

    hilt {
        enableAggregatingTask = true
    }

    defaultConfig {
        applicationId "com.samseptiano.fortius"
        minSdkVersion 24
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"
        archivesBaseName = "${applicationId}_v${versionName}(${versionCode})"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            buildConfigField "String", "BASE_URL_MAP", buildString(buildProps["base.url.map"])
            buildConfigField "String", "BASE_URL_FORTIUS", buildString(buildProps["base.url.fortius"])
            buildConfigField("String", "BUILD_DEBUG", "\"release\"")

            minifyEnabled = false
            shrinkResources false

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
        debug {
            buildConfigField "String", "BASE_URL_MAP", buildString(buildProps["base.url.map"])
            buildConfigField "String", "BASE_URL_FORTIUS", buildString(buildProps["base.url.fortius"])
            buildConfigField("String", "BUILD_DEBUG", "\"debug\"")

            getIsDefault().set(true) // set default build variant
            shrinkResources false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable true
        }

    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    configurations {
        all {
            //exclude group: 'androidx.lifecycle', module: 'lifecycle-runtime-ktx'
            //exclude group: 'androidx.lifecycle', module: 'lifecycle-viewmodel-ktx'
        }
    }
}

android.applicationVariants.all { variant ->
    variant.outputs.all {
        def appName = "rdm-asset-opname"
        def date = new Date()
        def formattedDate = date.format('MMM-dd-yyyy')
        outputFileName = appName + formattedDate + "-${variant.versionName}-${variant.versionCode}.apk"
    }
}

tasks.whenTaskAdded { task ->
    if (task.name.startsWith("bundle")) {
        def renameTaskName = "rename${task.name.capitalize()}Aab"
        def flavor = task.name.substring("bundle".length()).uncapitalize()
        tasks.create(renameTaskName, Copy) {
            def path = "${buildDir}/outputs/bundle/${flavor}/"
            from(path)
            include "app.aab"
            destinationDir file("${buildDir}/outputs/renamedBundle/")
            rename "app.aab", "${flavor}.aab"
        }

        task.finalizedBy(renameTaskName)
    }
}

dependencies {
    implementation(project(":base"))
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "com.google.android.material:material:$material_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_version"

    // RecyclerView
    implementation "androidx.recyclerview:recyclerview:$recycler_version"

    //GSON
    implementation "com.google.code.gson:gson:$gson_version"

    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'


    // Activity KTX for viewModels()
    implementation "androidx.activity:activity-ktx:1.2.2"


    //Hilt
    implementation 'com.google.dagger:hilt-android:2.43.2'
    implementation 'androidx.room:room-common:2.4.2'
    kapt 'com.google.dagger:hilt-android-compiler:2.43.2'
//    implementation 'androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha03'
    kapt 'androidx.hilt:hilt-compiler:1.0.0-beta01'


    //Coroutine
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"

    //ViewModel
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$androidx_lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$androidx_lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$androidx_lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"

    //Glide
//    implementation 'com.github.bumptech.glide:glide:4.11.0'
//    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'

    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"
    implementation("com.github.bumptech.glide:okhttp3-integration:$glide_version")
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'
    implementation 'com.github.bumptech.glide:annotations:4.11.0'

    //picasso
    implementation 'com.squareup.picasso:picasso:2.5.0'

    //Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    //MultiStateView
    implementation 'com.github.Kennyc1012:MultiStateView:2.2.0'

    //SDP
    implementation "com.intuit.sdp:sdp-android:$sdp_version"

    //Apache for string
    api 'org.apache.commons:commons-lang3:3.12.0'

    //Flexbox
    implementation 'com.google.android:flexbox:2.0.1'

    //Testing
    testImplementation 'junit:junit:4.13.2'
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation "io.mockk:mockk:1.9.3"
    testImplementation "org.mockito:mockito-core:3.3.3"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.1"
    testImplementation "com.squareup.okhttp3:mockwebserver:$okhttp_version"

    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation 'org.mockito:mockito-android:2.18.3'
    androidTestImplementation 'android.arch.core:core-testing:2.1.0'
    androidTestImplementation "io.mockk:mockk-android:1.9.3"

    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'

    //room
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    kapt "androidx.room:room-compiler:$room_version"


//    implementation 'me.ydcool.lib:qrmodule:latest.integration'
    implementation 'com.journeyapps:zxing-android-embedded:3.6.0'

    //excel reader
    implementation files('libs/poishadow-all.jar')

    //image crop
    implementation 'com.github.yalantis:ucrop:2.2.6'

    // Chucker
    debugImplementation "com.github.chuckerteam.chucker:library:4.0.0"
    releaseImplementation "com.github.chuckerteam.chucker:library-no-op:4.0.0"

    //DataStore
    implementation "androidx.datastore:datastore-preferences:1.0.0-alpha01"
    implementation "androidx.datastore:datastore-core:1.0.0-alpha01"

    implementation 'de.hdodenhof:circleimageview:3.1.0'


    //image compresor
    implementation 'id.zelory:compressor:3.0.1'

    implementation 'net.sourceforge.jtds:jtds:1.3.1'

    implementation 'commons-net:commons-net:3.8.0'
    implementation 'com.jcraft:jsch:0.1.55' // Check for the latest version


    // CameraX core library using camera2 implementation
    implementation "androidx.camera:camera-camera2:1.0.0-beta07"

    // CameraX Lifecycle Library
    implementation "androidx.camera:camera-lifecycle:1.0.0-beta07"

    // CameraX View class
    implementation "androidx.camera:camera-view:1.0.0-alpha14"


}

task renameBundle(type: Copy) {
    from "$buildDir/outputs/bundle/release"
    into "$buildDir/outputs/bundle/release"

    rename 'app.aab', "${android.defaultConfig.versionName}.aab"
}

task deleteOriginalBundleFile(type: Delete) {
    delete fileTree("$buildDir/outputs/bundle/release").matching {
        include "app.aab"
    }
}